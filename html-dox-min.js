/***
 * @fileOverview A sequential reactive templating engine for HTML.
 * @version 2.0.0
 * @license MIT
 * 
 */
let imports=document.querySelector("meta[imports]").getAttribute("imports"),parser=new DOMParser,useConfigPath=document.querySelector("meta[doxconfig]")?document.querySelector("meta[doxconfig]").getAttribute("path"):null,hotload=document.querySelector("meta[hotload]")?document.querySelector("meta[hotload]").getAttribute("hotload"):null;if(!useConfigPath)throw new Error('No config path specified please set a <meta doxconfig="path/to/config.json"> tag in your html file');function handleProps(e){let t=/{{prop.(\w+)}}/g.exec(e);if(t){return[t[1]]}}async function handleScriptImports(e){let t=parser.parseFromString(e,"text/html"),n=t.querySelectorAll("import");const i=[];return n.forEach(async function(e){let n=e.getAttribute("src"),o=n.split("/").pop().split(".")[0].toLowerCase();if(cache[n]){if(t.querySelector(o)){let e=(new DOMParser).parseFromString(cache[n],"text/html"),i=handleProps(html);i&&i.forEach(function(n){t.querySelectorAll(`[${n}]`).forEach(function(t){let i=t.getAttribute(n);window.props[n]||(window.props[n]=i),e.body.innerHTML=e.body.innerHTML.replaceAll(`{{prop.${n}}}`,i)})}),t.querySelectorAll(o).forEach(function(t){t.innerHTML=e.body.querySelector(o).outerHTML})}}else i.push(fetch(n).then(function(e){return e.text()}).then(function(e){e=e.replace(/&gt;/g,"&amp;gt;").replace(/&lt;/g,"&amp;lt;"),cache[n]=e;let i=(new DOMParser).parseFromString(e,"text/html"),r=handleProps(e);r&&r.forEach(function(e){t.querySelectorAll(`[${e}]`).forEach(function(t){let n=t.getAttribute(e);window.props[e]||(window.props[e]=n),i.body.innerHTML=i.body.innerHTML.replaceAll(`{{prop.${e}}}`,n)})}),t.querySelector(o)&&t.querySelectorAll(o).forEach(function(e){e.innerHTML=i.body.querySelector(o).innerHTML})}))}),await Promise.all(i),e=(e=t.body.innerHTML).replaceAll(/&gt;/g,">").replaceAll(/&lt;/g,"<")}function handleMarkdown(e){"true"===window.config.Logs&&console.log("🛠️ Markdown processor Active");let t=(new DOMParser).parseFromString(e,"text/html"),n=t.body,i=n.innerHTML,o=/\*\*([\s\S]*?)\*\*/g,r=/\*([\s\S]*?)\*/g,a=/> (.+)(\n|$)/g,l=/\[(.*?)\]\((.*?)\)/g,s=/^---$/gm,c=/\|(.+)\|/g,w=/`([^`]+)`/g,p=/- (.+)(\n|$)/g,u=/\d+\. (.+)(\n|$)/g;if(i.match(w)&&(i=i.replaceAll(w,"<code>$1</code>")),i.match(l)&&(i=i.replace(l,'<a style="color: #007bff; text-decoration:none" href="$2">$1</a>')),i.match(a)&&(i=i.replace(a,'<blockquote style="border-left: 5px solid #eeeeee; padding-left: 10px;">$1</blockquote>')),i.match(s)&&(i=i.replace(s,"<hr>")),i.match(o)&&(i=i.replace(o,"<strong>$1</strong>")),(i=i.replace(/#{1,6}\s+(.*)/g,function(e,t){let n=e.split(" ")[0].length;if(n>6)throw new Error("Heading level cannot be greater than 6");return"<h"+n+">"+t+"</h"+n+">"})).match(c)&&(i=i.replace(c,function(e,t){let n=t.split("\n"),i='<table class="table table-striped table-bordered">';return n.forEach(function(e){let t=e.split("|"),n="<tr>";t.forEach(function(e){n+="<td>"+e+"</td>"}),i+=n+="</tr>"}),i+="</table>"})),i.match(r)&&(i=i.replace(r,"<em>$1</em>")),i.match(p)){i=i.replace(/<li>(.+)<\/li>/g,"<li><ul><li>$1</li></ul></li>").replace(p,"<li>$1</li>")}if(i.match(u)){i=i.replace(/<li>(.+)<\/li>/g,"<li><ol><li>$1</li></ol></li>").replace(u,"<li>$1</li>")}return n.innerHTML=i,"true"===window.config.Logs&&console.log("😴 Markdown processor Sleeping"),t.documentElement.innerHTML}function handleEmojis(e){let t={...{":thumbsup:":"👍",":thumbsdown:":"👎",":heart:":"❤️",":broken_heart:":"💔",":star:":"⭐",":star2:":"🌟",":exclamation:":"❗",":question:":"❓",":warning:":"⚠️",":poop:":"💩",":clap:":"👏",":muscle:":"💪",":pray:":"🙏",":smile:":"😄",":smiley:":"😃",":grin:":"😀",":laughing:":"😆",":sweat_smile:":"😅",":joy:":"😂",":rofl:":"🤣",":relaxed:":"☺️",":ok_hand:":"👌",":100:":"💯"},...window.config.Emoji.emojis?window.config.Emoji.emojis:{}},n=parser.parseFromString(e,"text/html"),i=n.body,o=i.innerHTML;for(const e in t){if(!e.startsWith(":")||!e.endsWith(":"))throw new Error("Emoji must be in the format :emoji:");if(Object.hasOwnProperty.call(t,e)){let n=t[e];(n.startsWith("http")||n.startsWith("www")||n.startsWith("./"))&&(n=`<img src="${n}" width="32px" height="32px" />`),o=o.replaceAll(e,n)}}return i.innerHTML=o,n.documentElement.innerHTML}"true"===hotload&&(useConfigPath=useConfigPath+"?t="+Date.now()),fetch(useConfigPath).then(function(e){return e.text()}).then(function(e){window.config=JSON.parse(e)}),window.types={},window.templates={},window.scripts={},window.props={},window.states=sessionStorage.getItem("states")?JSON.parse(sessionStorage.getItem("states")):{};let fetchPromises=imports.split(",").map(async function(e){let t=e.split("/").pop().split(".")[0].toLowerCase();try{let n=await fetch(e),i=await n.text();if(e.endsWith(".html")){i=await handleScriptImports(i);let e=new Function("data","return `"+i+"`");return window.templates[t]=e,{func:e,name:t}}return window.scripts[t]=i,{script:i,name:t}}catch(e){return"true"===window.config.Logs&&console.error("FETCH ERROR: "+e),null}});function useState(e,t){return window.config.TypeChecking.active&&window.types[e]&&"true"===window.types[e].isUsed&&validateType(t,window.types[e].type),window.states[e]=t,sessionStorage.setItem("states",JSON.stringify(window.states)),window.dispatchEvent(new CustomEvent("stateChange",{detail:{name:e,value:t}})),window.states[e]}function useAuth(e,t){const n={};for(const t of e)n[t.action]=n[t.action]||[],n[t.action].push(t.role);return{canPerform:e=>{if(!t)return!1;const i=n[e]||[];return t.roles.some(e=>i.includes(e))},revoke:(e,t)=>{n[e]&&(n[e]=n[e].filter(e=>e!==t))},grant:(e,t)=>{n[e]||(n[e]=[]),n[e].includes(t)||n[e].push(t)},hasRole:e=>!!t&&t.roles.includes(e),getRoles:()=>t?t.roles:[]}}function effectOnStateChange(e,t){window.addEventListener("stateChange",function(n){n.detail.name===e&&t(n.detail.value)})}function handleLogic(e){}function useSanitizer(e){if(window.Sanitizer&&window.config&&window.config.Sanitizer&&window.config.Sanitizer.active||window.config.Sanitizer.useSanitizer.active){let t=parser.parseFromString(e,"text/html"),n=(window.config?window.config.Sanitizer:null)?JSON.parse(config):null,i=new Sanitizer(n||{allowElements:[],blockElements:[],dropElements:[],allowAttributes:{},dropAttributes:{},allowCustomElements:!0,allowComments:!0}),o=e;return t.body.setHTML(o,{sanitizer:i}),t.body.innerHTML}return window.Sanitizer?e:(console.warn("useSanitizer is only available in Chrome, Edge, and Opera at the moment."),e)}function handleFunctions(e){let t,n=/function\s+(\w+)\s*\(([\s\S]*?)\)\s*{([\s\S]*?)\s*}\s*(?=\n|<|;|$)/g;for(;null!==(t=n.exec(e.html));){let e=t[1],n=t[2]||"empty",i=t[3],o={};n.split(",").map(e=>e.trim()).forEach(function(e){if(""===e)return;let[t,n]=e.split(":").map(e=>e.trim());n&&(o[t]=n)}),n.includes(":")&&(n=n.replaceAll(":"," = ")),window.config.Logs&&console.log("🛠️ creating async function "+e);let r=new Function(`\n           return async function ${e}(${n||""}) {\n               ${i}\n\n               if (window.config.TypeChecking.active && window.types['${e}'] && window.types['${e}'].isUsed === 'true'\n                   && window.types['${e}'].params.length > 0\n               ) {\n                   let params = Array.from(arguments);\n                   let paramTypes = ${JSON.stringify(o)};\n\n                   for (let i = 0; i < params.length; i++) {\n                       let param = params[i];\n                       if (window.types['${e}'].params.includes(Object.keys(paramTypes)[i])) {\n                           let type = paramTypes[Object.keys(paramTypes)[i]];\n\n                           if (type) {\n                               validateType(param, type);\n                           }\n                       }\n                   }\n               }\n           }\n       `)();window[e]=r}return e.html}async function handleVariables(e){for(var t,n=/let\s+(\w+)\s*=\s*([\s\S]*?)(?:;|$)/g,i={};null!==(t=n.exec(e.html));){var o=t[1],r=t[2];window.states[o]?r=window.states[o]:(r=r.startsWith("fetch")?await new Function(`return ${r}`)():new Function(`return ${r}`)(),window.states[o]=r,window[o]=r,sessionStorage.setItem("states",JSON.stringify(window.states))),i[o]=r}for(var a in i)e.html=e.html.replaceAll(new RegExp(`{{${a}}}`,"g"),i[a]);return e.html}function validateType(e,t,n=null){if("true"===window.config.Logs&&console.log("🛠️ Type engine Active"),"Function"!==t){if("Array"===t){if(!Array.isArray(e))throw new Error(`Type mismatch. Expected array but got ${typeof e}`)}else if("Number"===t){if("number"!=typeof e||isNaN(e))throw new Error(`Type mismatch. Expected number but got ${typeof e}`)}else if(typeof e!==t.toLowerCase())throw new Error(`Type mismatch. Expected ${t} but got ${typeof e}`);"true"===window.config.Logs&&console.log("😴 Type engine Sleeping")}}function handleTypes(e){let t=parser.parseFromString(e,"text/html").querySelectorAll("script[types]");const n=new Map;return t.forEach(function(e){let t=e.innerHTML,i=/interface\s+(\w+)\s*{([\s\S]*?)\s*}\s*(?=\n|<|;|$)/g;for(;null!==(match=i.exec(t));){let e=match[1],t=match[2],i={};t.split(",").forEach(function(e){let[t,n]=e.split(":").map(e=>e.trim());i[t]=n}),n.set(e,i)}}),n.forEach(function(e,t){const n=window[t];"false"!==e.isUsed&&("Function"!==e.type?(validateType(n,e.type),window.types[t]=e):window.types[t]=e)}),e}window.useAuth=useAuth,window.setState=((e,t)=>useState(e,t)),window.getState=(e=>window.states[e]),window.useSanitizer=(e=>useSanitizer(e));const cache={};async function handleScripts(e){"true"===window.config.Logs&&console.log("🛠️ Script engine Active");try{let t=parser.parseFromString(e.html,"text/html").querySelectorAll("script");for(let n=0;n<t.length;n++){let i=t[n];if(i.hasAttribute("execute")){let e=document.createElement("script");e.innerHTML=i.innerHTML,e.type="module",document.head.appendChild(e)}else e.html=await handleVariables({html:e.html,name:e.name}),window.config.TypeChecking.active&&handleTypes(e.html),e.html=await handleFunctions({html:e.html,name:e.name}),window.config.Markdown.active&&(e.html=await handleMarkdown(e.html)),window.config.Emoji.active&&(e.html=await handleEmojis(e.html))}}catch(e){throw new Error(e)}return"true"===window.config.Logs&&console.log("😴 Script engine Sleeping"),e}function registerTemplate(e,t){window.templates[e]=t}async function renderTemplate(e){try{let t=window.templates[e];if(t){let n=await t();n=await handleScripts({html:n,name:e});let i=parser.parseFromString(await n.html,"text/html");if(window.Sanitizer&&window.config&&window.config.Sanitizer&&window.config.Sanitizer.active){console.warn("Sanitizer is active - please disable to enable client execution");let e=new Sanitizer,n=await t();i.body.setHTML(n,{sanitizer:e})}i.firstChild.id=e,document.querySelector(window.config.Dox.root).innerHTML=i.firstChild.outerHTML}}catch(e){console.error("TEMPLATE ERROR: "+e)}}Promise.all(fetchPromises).then(function(e){(e=e.filter(function(e){return!e.script})).forEach(function(e){registerTemplate(e.name,e.func);for(var t,n=/let\s+(\w+)\s*=\s*([\s\S]*?)(?:;|$)/g;null!==(t=n.exec(e.func()));){var i=t[1];effectOnStateChange(i,function(t){window.states[i]=t,sessionStorage.setItem("states",JSON.stringify(window.states)),renderTemplate(e.name)})}}),window.renderTemplate=renderTemplate}).then(function(){Object.keys(window.scripts).forEach(function(e){let t=document.createElement("script");t.innerHTML=window.scripts[e],t.type="module",document.head.appendChild(t)})}),window.onbeforeunload=function(){sessionStorage.removeItem("states")};